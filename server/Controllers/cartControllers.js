const { findByIdAndUpdate } = require('../Models/Cart');
const Cart = require('../Models/Cart');
exports.addToCart = async (req, res) => {
    const { itemId, itemName, itemPrice, itemQuantity, category, itemSize, vendorId } = req.body;
    const user = req.user._id
    // check if user exist
    const item = await Cart.findOne({ itemId });
    //if item is not in cart then add to cart
    if (!item) {
        const newItem = new Cart({
            user,
            itemId,
            itemName,
            itemPrice,
            itemQuantity,
            category,
            itemSize,
            vendorId
        });

        try {
            await newItem.save()
            res.status(200).send("Item Added")
        } catch (error) {
            console.log(error);
            res.status(500)
        }
    }
    //else if item is already in cart then increase its quantity
    else {
        res.send("Item already in cart, use increment, decrement or remove to update this item in cart")
        res.status(500)
    }
};

exports.loadCart = async (req, res) => {
    const user = req.user._id
    try {
        const item = await Cart.find({ user });
        res.status(200).send(item)
    } catch (error) {
        console.log(error)
        res.status(500)
    }
}

exports.removeFromCart = async (req, res) => {
    //this is the _id that is generated by mongoose when adding an item to the cart
    const { cartItemId } = req.body;
    try {
        await Cart.findByIdAndDelete(cartItemId);
        res.status(200).send("Item removed")
    } catch (error) {
        console.log(error)
        res.status(500)
    }
}

exports.increment = async (req, res) => {
    //this is the _id that is generated by mongoose when adding an item to the cart
    const { cartItemId } = req.body;
    const cartItem = await Cart.findOne({ cartItemId });
    const newQuantity = cartItem.itemQuantity += 1;
    console.log(newQuantity)
    console.log(cartItemId)

    try {
        await Cart.findByIdAndUpdate(cartItemId, { itemQuantity: newQuantity }, { useFindAndModify: false })
        res.status(200).send("item incremented successfully")

    }
    catch (error) {
        res.status(500).send({ message: "Error in updating" })
        console.log(error)
    }
}


exports.decrement = async (req, res) => {
    //this is the _id that is generated by mongoose when adding an item to the cart
    const { cartItemId } = req.body;
    const cartItem = await Cart.findOne({ cartItemId });
    const newQuantity = cartItem.itemQuantity -= 1;
    if (cartItem.itemQuantity > 0) {

        try {
            await Cart.findByIdAndUpdate(cartItemId, { itemQuantity: newQuantity }, { useFindAndModify: false })
            res.status(200).send("item decremented successfully")

        }
        catch (error) {
            res.status(500).send({ message: "Error in updating" })
            console.log(error)
        }
    }
    else{
        //item's quantity should not be 0, this logic will be implemented at frontend
        res.send("item's quantity should not be 0")
    }
}